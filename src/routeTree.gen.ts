/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TooltipsImport } from './routes/tooltips'
import { Route as DropdownsImport } from './routes/dropdowns'
import { Route as TooltipsReactImport } from './routes/tooltips/react'
import { Route as TooltipsPopoverImport } from './routes/tooltips/popover'
import { Route as TooltipsCssImport } from './routes/tooltips/css'
import { Route as DropdownsSingleOptionImport } from './routes/dropdowns/single-option'
import { Route as DropdownsSelectOptionImport } from './routes/dropdowns/select-option'
import { Route as DropdownsPositionsImport } from './routes/dropdowns/positions'

// Create Virtual Routes

const ButtonLazyImport = createFileRoute('/button')()
const IndexLazyImport = createFileRoute('/')()
const Modals2LazyImport = createFileRoute('/modals/2')()
const Modals1LazyImport = createFileRoute('/modals/1')()
const InputsSwitchLazyImport = createFileRoute('/inputs/switch')()
const InputsRadioLazyImport = createFileRoute('/inputs/radio')()
const InputsCheckboxLazyImport = createFileRoute('/inputs/checkbox')()

// Create/Update Routes

const ButtonLazyRoute = ButtonLazyImport.update({
  path: '/button',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/button.lazy').then((d) => d.Route))

const TooltipsRoute = TooltipsImport.update({
  path: '/tooltips',
  getParentRoute: () => rootRoute,
} as any)

const DropdownsRoute = DropdownsImport.update({
  path: '/dropdowns',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const Modals2LazyRoute = Modals2LazyImport.update({
  path: '/modals/2',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/modals/2.lazy').then((d) => d.Route))

const Modals1LazyRoute = Modals1LazyImport.update({
  path: '/modals/1',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/modals/1.lazy').then((d) => d.Route))

const InputsSwitchLazyRoute = InputsSwitchLazyImport.update({
  path: '/inputs/switch',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/inputs/switch.lazy').then((d) => d.Route))

const InputsRadioLazyRoute = InputsRadioLazyImport.update({
  path: '/inputs/radio',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/inputs/radio.lazy').then((d) => d.Route))

const InputsCheckboxLazyRoute = InputsCheckboxLazyImport.update({
  path: '/inputs/checkbox',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/inputs/checkbox.lazy').then((d) => d.Route),
)

const TooltipsReactRoute = TooltipsReactImport.update({
  path: '/react',
  getParentRoute: () => TooltipsRoute,
} as any)

const TooltipsPopoverRoute = TooltipsPopoverImport.update({
  path: '/popover',
  getParentRoute: () => TooltipsRoute,
} as any)

const TooltipsCssRoute = TooltipsCssImport.update({
  path: '/css',
  getParentRoute: () => TooltipsRoute,
} as any)

const DropdownsSingleOptionRoute = DropdownsSingleOptionImport.update({
  path: '/single-option',
  getParentRoute: () => DropdownsRoute,
} as any)

const DropdownsSelectOptionRoute = DropdownsSelectOptionImport.update({
  path: '/select-option',
  getParentRoute: () => DropdownsRoute,
} as any)

const DropdownsPositionsRoute = DropdownsPositionsImport.update({
  path: '/positions',
  getParentRoute: () => DropdownsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dropdowns': {
      id: '/dropdowns'
      path: '/dropdowns'
      fullPath: '/dropdowns'
      preLoaderRoute: typeof DropdownsImport
      parentRoute: typeof rootRoute
    }
    '/tooltips': {
      id: '/tooltips'
      path: '/tooltips'
      fullPath: '/tooltips'
      preLoaderRoute: typeof TooltipsImport
      parentRoute: typeof rootRoute
    }
    '/button': {
      id: '/button'
      path: '/button'
      fullPath: '/button'
      preLoaderRoute: typeof ButtonLazyImport
      parentRoute: typeof rootRoute
    }
    '/dropdowns/positions': {
      id: '/dropdowns/positions'
      path: '/positions'
      fullPath: '/dropdowns/positions'
      preLoaderRoute: typeof DropdownsPositionsImport
      parentRoute: typeof DropdownsImport
    }
    '/dropdowns/select-option': {
      id: '/dropdowns/select-option'
      path: '/select-option'
      fullPath: '/dropdowns/select-option'
      preLoaderRoute: typeof DropdownsSelectOptionImport
      parentRoute: typeof DropdownsImport
    }
    '/dropdowns/single-option': {
      id: '/dropdowns/single-option'
      path: '/single-option'
      fullPath: '/dropdowns/single-option'
      preLoaderRoute: typeof DropdownsSingleOptionImport
      parentRoute: typeof DropdownsImport
    }
    '/tooltips/css': {
      id: '/tooltips/css'
      path: '/css'
      fullPath: '/tooltips/css'
      preLoaderRoute: typeof TooltipsCssImport
      parentRoute: typeof TooltipsImport
    }
    '/tooltips/popover': {
      id: '/tooltips/popover'
      path: '/popover'
      fullPath: '/tooltips/popover'
      preLoaderRoute: typeof TooltipsPopoverImport
      parentRoute: typeof TooltipsImport
    }
    '/tooltips/react': {
      id: '/tooltips/react'
      path: '/react'
      fullPath: '/tooltips/react'
      preLoaderRoute: typeof TooltipsReactImport
      parentRoute: typeof TooltipsImport
    }
    '/inputs/checkbox': {
      id: '/inputs/checkbox'
      path: '/inputs/checkbox'
      fullPath: '/inputs/checkbox'
      preLoaderRoute: typeof InputsCheckboxLazyImport
      parentRoute: typeof rootRoute
    }
    '/inputs/radio': {
      id: '/inputs/radio'
      path: '/inputs/radio'
      fullPath: '/inputs/radio'
      preLoaderRoute: typeof InputsRadioLazyImport
      parentRoute: typeof rootRoute
    }
    '/inputs/switch': {
      id: '/inputs/switch'
      path: '/inputs/switch'
      fullPath: '/inputs/switch'
      preLoaderRoute: typeof InputsSwitchLazyImport
      parentRoute: typeof rootRoute
    }
    '/modals/1': {
      id: '/modals/1'
      path: '/modals/1'
      fullPath: '/modals/1'
      preLoaderRoute: typeof Modals1LazyImport
      parentRoute: typeof rootRoute
    }
    '/modals/2': {
      id: '/modals/2'
      path: '/modals/2'
      fullPath: '/modals/2'
      preLoaderRoute: typeof Modals2LazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  DropdownsRoute: DropdownsRoute.addChildren({
    DropdownsPositionsRoute,
    DropdownsSelectOptionRoute,
    DropdownsSingleOptionRoute,
  }),
  TooltipsRoute: TooltipsRoute.addChildren({
    TooltipsCssRoute,
    TooltipsPopoverRoute,
    TooltipsReactRoute,
  }),
  ButtonLazyRoute,
  InputsCheckboxLazyRoute,
  InputsRadioLazyRoute,
  InputsSwitchLazyRoute,
  Modals1LazyRoute,
  Modals2LazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dropdowns",
        "/tooltips",
        "/button",
        "/inputs/checkbox",
        "/inputs/radio",
        "/inputs/switch",
        "/modals/1",
        "/modals/2"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/dropdowns": {
      "filePath": "dropdowns.tsx",
      "children": [
        "/dropdowns/positions",
        "/dropdowns/select-option",
        "/dropdowns/single-option"
      ]
    },
    "/tooltips": {
      "filePath": "tooltips.tsx",
      "children": [
        "/tooltips/css",
        "/tooltips/popover",
        "/tooltips/react"
      ]
    },
    "/button": {
      "filePath": "button.lazy.tsx"
    },
    "/dropdowns/positions": {
      "filePath": "dropdowns/positions.tsx",
      "parent": "/dropdowns"
    },
    "/dropdowns/select-option": {
      "filePath": "dropdowns/select-option.tsx",
      "parent": "/dropdowns"
    },
    "/dropdowns/single-option": {
      "filePath": "dropdowns/single-option.tsx",
      "parent": "/dropdowns"
    },
    "/tooltips/css": {
      "filePath": "tooltips/css.tsx",
      "parent": "/tooltips"
    },
    "/tooltips/popover": {
      "filePath": "tooltips/popover.tsx",
      "parent": "/tooltips"
    },
    "/tooltips/react": {
      "filePath": "tooltips/react.tsx",
      "parent": "/tooltips"
    },
    "/inputs/checkbox": {
      "filePath": "inputs/checkbox.lazy.tsx"
    },
    "/inputs/radio": {
      "filePath": "inputs/radio.lazy.tsx"
    },
    "/inputs/switch": {
      "filePath": "inputs/switch.lazy.tsx"
    },
    "/modals/1": {
      "filePath": "modals/1.lazy.tsx"
    },
    "/modals/2": {
      "filePath": "modals/2.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
