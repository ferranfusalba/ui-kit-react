/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TooltipsImport } from './routes/tooltips'
import { Route as TooltipsReactImport } from './routes/tooltips.react'
import { Route as TooltipsPopoverImport } from './routes/tooltips.popover'
import { Route as TooltipsCssImport } from './routes/tooltips.css'

// Create Virtual Routes

const SwitchLazyImport = createFileRoute('/switch')()
const RadioLazyImport = createFileRoute('/radio')()
const Modal2LazyImport = createFileRoute('/modal-2')()
const ModalLazyImport = createFileRoute('/modal')()
const DropdownSingleOptionLazyImport = createFileRoute(
  '/dropdown-single-option',
)()
const DropdownSelectOptionLazyImport = createFileRoute(
  '/dropdown-select-option',
)()
const DropdownPositionsLazyImport = createFileRoute('/dropdown-positions')()
const CheckboxLazyImport = createFileRoute('/checkbox')()
const ButtonLazyImport = createFileRoute('/button')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SwitchLazyRoute = SwitchLazyImport.update({
  path: '/switch',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/switch.lazy').then((d) => d.Route))

const RadioLazyRoute = RadioLazyImport.update({
  path: '/radio',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/radio.lazy').then((d) => d.Route))

const Modal2LazyRoute = Modal2LazyImport.update({
  path: '/modal-2',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/modal-2.lazy').then((d) => d.Route))

const ModalLazyRoute = ModalLazyImport.update({
  path: '/modal',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/modal.lazy').then((d) => d.Route))

const DropdownSingleOptionLazyRoute = DropdownSingleOptionLazyImport.update({
  path: '/dropdown-single-option',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dropdown-single-option.lazy').then((d) => d.Route),
)

const DropdownSelectOptionLazyRoute = DropdownSelectOptionLazyImport.update({
  path: '/dropdown-select-option',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dropdown-select-option.lazy').then((d) => d.Route),
)

const DropdownPositionsLazyRoute = DropdownPositionsLazyImport.update({
  path: '/dropdown-positions',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dropdown-positions.lazy').then((d) => d.Route),
)

const CheckboxLazyRoute = CheckboxLazyImport.update({
  path: '/checkbox',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/checkbox.lazy').then((d) => d.Route))

const ButtonLazyRoute = ButtonLazyImport.update({
  path: '/button',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/button.lazy').then((d) => d.Route))

const TooltipsRoute = TooltipsImport.update({
  path: '/tooltips',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TooltipsReactRoute = TooltipsReactImport.update({
  path: '/react',
  getParentRoute: () => TooltipsRoute,
} as any)

const TooltipsPopoverRoute = TooltipsPopoverImport.update({
  path: '/popover',
  getParentRoute: () => TooltipsRoute,
} as any)

const TooltipsCssRoute = TooltipsCssImport.update({
  path: '/css',
  getParentRoute: () => TooltipsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/tooltips': {
      preLoaderRoute: typeof TooltipsImport
      parentRoute: typeof rootRoute
    }
    '/button': {
      preLoaderRoute: typeof ButtonLazyImport
      parentRoute: typeof rootRoute
    }
    '/checkbox': {
      preLoaderRoute: typeof CheckboxLazyImport
      parentRoute: typeof rootRoute
    }
    '/dropdown-positions': {
      preLoaderRoute: typeof DropdownPositionsLazyImport
      parentRoute: typeof rootRoute
    }
    '/dropdown-select-option': {
      preLoaderRoute: typeof DropdownSelectOptionLazyImport
      parentRoute: typeof rootRoute
    }
    '/dropdown-single-option': {
      preLoaderRoute: typeof DropdownSingleOptionLazyImport
      parentRoute: typeof rootRoute
    }
    '/modal': {
      preLoaderRoute: typeof ModalLazyImport
      parentRoute: typeof rootRoute
    }
    '/modal-2': {
      preLoaderRoute: typeof Modal2LazyImport
      parentRoute: typeof rootRoute
    }
    '/radio': {
      preLoaderRoute: typeof RadioLazyImport
      parentRoute: typeof rootRoute
    }
    '/switch': {
      preLoaderRoute: typeof SwitchLazyImport
      parentRoute: typeof rootRoute
    }
    '/tooltips/css': {
      preLoaderRoute: typeof TooltipsCssImport
      parentRoute: typeof TooltipsImport
    }
    '/tooltips/popover': {
      preLoaderRoute: typeof TooltipsPopoverImport
      parentRoute: typeof TooltipsImport
    }
    '/tooltips/react': {
      preLoaderRoute: typeof TooltipsReactImport
      parentRoute: typeof TooltipsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  TooltipsRoute.addChildren([
    TooltipsCssRoute,
    TooltipsPopoverRoute,
    TooltipsReactRoute,
  ]),
  ButtonLazyRoute,
  CheckboxLazyRoute,
  DropdownPositionsLazyRoute,
  DropdownSelectOptionLazyRoute,
  DropdownSingleOptionLazyRoute,
  ModalLazyRoute,
  Modal2LazyRoute,
  RadioLazyRoute,
  SwitchLazyRoute,
])

/* prettier-ignore-end */
