/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TooltipsImport } from './routes/tooltips'
import { Route as DropdownsImport } from './routes/dropdowns'
import { Route as TooltipsReactImport } from './routes/tooltips/react'
import { Route as TooltipsPopoverImport } from './routes/tooltips/popover'
import { Route as TooltipsCssImport } from './routes/tooltips/css'
import { Route as DropdownsSingleOptionImport } from './routes/dropdowns/single-option'
import { Route as DropdownsSelectOptionImport } from './routes/dropdowns/select-option'
import { Route as DropdownsPositionsImport } from './routes/dropdowns/positions'

// Create Virtual Routes

const Modal2LazyImport = createFileRoute('/modal-2')()
const ModalLazyImport = createFileRoute('/modal')()
const ButtonLazyImport = createFileRoute('/button')()
const IndexLazyImport = createFileRoute('/')()
const InputsSwitchLazyImport = createFileRoute('/inputs/switch')()
const InputsRadioLazyImport = createFileRoute('/inputs/radio')()
const InputsCheckboxLazyImport = createFileRoute('/inputs/checkbox')()

// Create/Update Routes

const Modal2LazyRoute = Modal2LazyImport.update({
  path: '/modal-2',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/modal-2.lazy').then((d) => d.Route))

const ModalLazyRoute = ModalLazyImport.update({
  path: '/modal',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/modal.lazy').then((d) => d.Route))

const ButtonLazyRoute = ButtonLazyImport.update({
  path: '/button',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/button.lazy').then((d) => d.Route))

const TooltipsRoute = TooltipsImport.update({
  path: '/tooltips',
  getParentRoute: () => rootRoute,
} as any)

const DropdownsRoute = DropdownsImport.update({
  path: '/dropdowns',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const InputsSwitchLazyRoute = InputsSwitchLazyImport.update({
  path: '/inputs/switch',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/inputs/switch.lazy').then((d) => d.Route))

const InputsRadioLazyRoute = InputsRadioLazyImport.update({
  path: '/inputs/radio',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/inputs/radio.lazy').then((d) => d.Route))

const InputsCheckboxLazyRoute = InputsCheckboxLazyImport.update({
  path: '/inputs/checkbox',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/inputs/checkbox.lazy').then((d) => d.Route),
)

const TooltipsReactRoute = TooltipsReactImport.update({
  path: '/react',
  getParentRoute: () => TooltipsRoute,
} as any)

const TooltipsPopoverRoute = TooltipsPopoverImport.update({
  path: '/popover',
  getParentRoute: () => TooltipsRoute,
} as any)

const TooltipsCssRoute = TooltipsCssImport.update({
  path: '/css',
  getParentRoute: () => TooltipsRoute,
} as any)

const DropdownsSingleOptionRoute = DropdownsSingleOptionImport.update({
  path: '/single-option',
  getParentRoute: () => DropdownsRoute,
} as any)

const DropdownsSelectOptionRoute = DropdownsSelectOptionImport.update({
  path: '/select-option',
  getParentRoute: () => DropdownsRoute,
} as any)

const DropdownsPositionsRoute = DropdownsPositionsImport.update({
  path: '/positions',
  getParentRoute: () => DropdownsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dropdowns': {
      preLoaderRoute: typeof DropdownsImport
      parentRoute: typeof rootRoute
    }
    '/tooltips': {
      preLoaderRoute: typeof TooltipsImport
      parentRoute: typeof rootRoute
    }
    '/button': {
      preLoaderRoute: typeof ButtonLazyImport
      parentRoute: typeof rootRoute
    }
    '/modal': {
      preLoaderRoute: typeof ModalLazyImport
      parentRoute: typeof rootRoute
    }
    '/modal-2': {
      preLoaderRoute: typeof Modal2LazyImport
      parentRoute: typeof rootRoute
    }
    '/dropdowns/positions': {
      preLoaderRoute: typeof DropdownsPositionsImport
      parentRoute: typeof DropdownsImport
    }
    '/dropdowns/select-option': {
      preLoaderRoute: typeof DropdownsSelectOptionImport
      parentRoute: typeof DropdownsImport
    }
    '/dropdowns/single-option': {
      preLoaderRoute: typeof DropdownsSingleOptionImport
      parentRoute: typeof DropdownsImport
    }
    '/tooltips/css': {
      preLoaderRoute: typeof TooltipsCssImport
      parentRoute: typeof TooltipsImport
    }
    '/tooltips/popover': {
      preLoaderRoute: typeof TooltipsPopoverImport
      parentRoute: typeof TooltipsImport
    }
    '/tooltips/react': {
      preLoaderRoute: typeof TooltipsReactImport
      parentRoute: typeof TooltipsImport
    }
    '/inputs/checkbox': {
      preLoaderRoute: typeof InputsCheckboxLazyImport
      parentRoute: typeof rootRoute
    }
    '/inputs/radio': {
      preLoaderRoute: typeof InputsRadioLazyImport
      parentRoute: typeof rootRoute
    }
    '/inputs/switch': {
      preLoaderRoute: typeof InputsSwitchLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  DropdownsRoute.addChildren([
    DropdownsPositionsRoute,
    DropdownsSelectOptionRoute,
    DropdownsSingleOptionRoute,
  ]),
  TooltipsRoute.addChildren([
    TooltipsCssRoute,
    TooltipsPopoverRoute,
    TooltipsReactRoute,
  ]),
  ButtonLazyRoute,
  ModalLazyRoute,
  Modal2LazyRoute,
  InputsCheckboxLazyRoute,
  InputsRadioLazyRoute,
  InputsSwitchLazyRoute,
])

/* prettier-ignore-end */
